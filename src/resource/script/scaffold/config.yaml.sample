---

global:
  setting:
    tab_size: 4 # 4 spaces
  path:
    application: 'src/application'
    domain_model: 'src/domain_model'
    exception: 'src/domain_model/resource/exception'
    port_adapter: 'src/port_adapter'
    repository: 'src/port_adapter/repository'
    db_model: 'src/port_adapter/repository/db_model'
    messaging_listener: 'src/port_adapter/messaging/listener'
    grpc_api_listener: 'src/port_adapter/api/grpc/listener'
    proto_buffer: 'src/resource/proto'
    test: 'test'
    app_di: 'app_di'

domain_model:
  - model:
#      skip: [router, model_response, grpc_client, proto, command_constant]
#     Overwrite the file even if it was modified manually, otherwise, the file will not be overwritten
#     file_overwrite: True
      message_command: ProjectCommand
      path: project/equipment/model
      microservice: project
      name: equipment_model
      field:
        - name: name
          type: str
#          optional: True
          proto:
            type: string

segment:
# This can introduce in this example route to get maintenance procedures by equipment id
  - name: maintenance_procedure
    foreign:
        model: *equipment_model