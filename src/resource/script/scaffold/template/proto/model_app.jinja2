/*
The file is generated by a scaffold script
@author: Arkan M. Gerges<arkan.m.gerges@gmail.com>
*/

{%set className= model.name | upperCamelCase%}
{%-set lowerCamelModelName= model.name | lowerCamelCase-%}
{%-set funcParams= model.field | mapFuncParams-%}
{%-set funcArgs= model.field | mapFuncArgs-%}
{%-set funcArgsByObjDict= model.field | mapFuncArgs('obj', 'function', ':')-%}
{%-set funcArgsByDict= model.field | mapFuncArgs('dataDict', 'dictionary')-%}
{%-set funcArgsByDbObj= model.field | mapFuncArgs('dbObject')-%}
{%-set funcArgsByItem= model.field | mapFuncArgs('x')-%}
{%-set classNameWords= model.name | spacedWords%}
{%-set filePath= model.path | replace('/', '.')%}
syntax = "proto3";

package cafm.{{ model.microservice }}.{{ model.name }};

import "{{ model.microservice }}/{{ model.name }}.proto";
import "order.proto";

message {{ className }}AppService_{{ lowerCamelModelName }}ByIdRequest {
  string id = 1;
}

message {{ className }}AppService_{{ lowerCamelModelName }}ByIdResponse {
  {{ className }} {{ lowerCamelModelName }} = 1;
}

message {{ className }}AppService_{{ lowerCamelModelName | pluralize }}Request {
  int32 resultFrom = 1;
  int32 resultSize = 2;
  repeated cafm.common.order.Order order = 3;
}

message {{ className }}AppService_{{ lowerCamelModelName | pluralize }}Response {
  repeated {{ className }} {{ lowerCamelModelName | pluralize }} = 1;
  int32 itemCount = 2;
}

{%-block requestAndResponseModelByForeignModelId%}{%-endblock%}

service {{ className }}AppService {
  rpc {{ lowerCamelModelName }}ById ({{ className }}AppService_{{ lowerCamelModelName }}ByIdRequest) returns ({{ className }}AppService_{{ lowerCamelModelName }}ByIdResponse) {}
  rpc {{ lowerCamelModelName | pluralize }} ({{ className }}AppService_{{ lowerCamelModelName | pluralize }}Request) returns ({{ className }}AppService_{{ lowerCamelModelName | pluralize }}Response) {}
  {%- block appServiceModelByForeignModelId %}{%- endblock -%}  
}